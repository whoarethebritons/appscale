#!/bin/sh
### BEGIN INIT INFO
# Provides:          appscale-controller
# Required-Start:    $local_fs
# Required-Stop:     $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Interactive:     false
# Short-Description: Init script for AppScale AppController.
# Description:       Start/stop script for AppScale AppController. 
### END INIT INFO

DESC="AppScale Controller"
DIR=/root/appscale/AppController
DAEMON=$DIR/djinnServer.rb
DAEMON_NAME=appscale-controller
DAEMON_USER=root
PIDFILE=/var/run/appscale/controller.pid
SECRET_FILE=/etc/appscale/secret.key
LOG_FILE=/var/log/appscale/controller.log
PATH=/usr/local/bin:$PATH
. /lib/lsb/init-functions

do_start()
{
   if [ ! -e $SECRET_FILE ]; then
     log_begin_msg "AppScale not configured: not starting."
     exit 1
   fi

   # The run directory is cleared on every reboot.
   mkdir -p /var/run/appscale

   log_daemon_msg "Starting system $DAEMON_NAME daemon"
   start-stop-daemon --start --background --make-pidfile --pidfile $PIDFILE\
     --user $DAEMON_USER --chuid $DAEMON_USER --startas /bin/bash -- -c\
     "exec $DAEMON >> $LOG_FILE 2>&1"
   log_end_msg $?
}

do_stop()
{
   log_daemon_msg "Stopping system $DAEMON_NAME daemon"
   start-stop-daemon --stop --pidfile $PIDFILE --retry=TERM/30/KILL/5
   RETVAL="$?"

   if [ "${RETVAL}" = "0" ]; then
       rm ${PIDFILE}
   fi

   return "$RETVAL"
}

case "$1" in
 
    start)
        if status_of_proc "$DAEMON_NAME" "$DAEMON" > /dev/null; then
                echo "$DAEMON_NAME already running."
                exit 0
        fi
        do_${1}
        ;;
        
    stop)
        do_stop
        case "$?" in
            # The start-stop-daemon returns "1" if service is already stopped.
            0|1) log_end_msg 0 ;;
            *) log_end_msg 1 ;;
        esac
        ;;
        
    restart|reload|force-reload)
        do_stop
        do_start
        ;;
 
    status)
        status_of_proc "$DAEMON" "$DAEMON_NAME" && exit 0 || exit $?
        ;;

    *)
        echo "Usage: /etc/init.d/$DAEMON_NAME {start|stop|restart|status}"
        exit 1
        ;;
 
esac
exit 0
